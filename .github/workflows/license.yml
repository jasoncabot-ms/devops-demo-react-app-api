# This is a basic workflow to help you get started with Actions

name: License Check

on:
  push:
    branches: [ main ]
    paths: 
      - .github/workflows/license.yml
      - .licensed.yml
      - package.json
      - package-lock.json
  pull_request:
    branches: [ main ]
    paths: 
      - .github/workflows/license.yml
      - .licensed.yml
      - package.json
      - package-lock.json

jobs:
  license_check:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up license checker
      uses: jonabc/setup-licensed@v1
      with:
        version: 2.x
        
    - name: Set up Node.js version
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: Install dependencies in local env
      run: npm install
        
    - name: Run license check
      id: licensed 
      run: |
        # Cache and check licenses
        licensed cache

        # Run command and grab exit code + output
        RESULT="$(licensed status -c .licensed.yml)"
        CODE=$?

        # Allow multi-line strings in output
        RESULT="${RESULT//'%'/'%25'}"
        RESULT="${RESULT//$'\n'/'%0A'}"
        RESULT="${RESULT//$'\r'/'%0D'}"
        echo "::set-output name=status::$RESULT"

        # This is the real exit code from the license check
        exit $CODE
      shell: bash --noprofile --norc -o pipefail {0}

    - name: Report back on PR
      if: ${{ failure() && github.event_name == 'pull_request' }}
      uses: actions/github-script@0.2.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = process.env.LICENSED_OUTPUT;
          github.issues.createComment({
            ...context.repo,
            issue_number: context.payload.number,
            body: output
          })
      env:
        LICENSED_OUTPUT: ${{ steps.licensed.outputs.status }}
